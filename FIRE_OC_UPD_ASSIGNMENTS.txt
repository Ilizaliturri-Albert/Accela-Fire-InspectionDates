var message = "";
var result = "0"; //assume success

try{
 var getResult = aa.cap.getByAppType("Fire",null,null,"Fire Occupancy");
 if(getResult.getSuccess()){
  var capIds = getResult.getOutput();
  var numprocessed = 0;
  var numrecords = capIds.length;
  var inspectorObj = null;
  var assignDone = false;
  var inspprocessed = 0;

  for(var capId in capIds){
   assignDone = false;
   var getInsp = aa.inspection.getInspections(capIds[capId].getCapID());
   if(getInsp.getSuccess()){
    var insps = getInsp.getOutput();
	for(var insp in insps){
	 if(insps[insp].getInspectionStatus() == "Scheduled" && insps[insp].getInspectionType().indexOf("Follow Up") < 0 ) {
	  //autoAssignInspection(insps[insp].getIdNumber());
	  {
	    var iNumber = insps[insp].getIdNumber();
		iObjResult = aa.inspection.getInspection(capIds[capId].getCapID(),iNumber);
		//if (!iObjResult.getSuccess()){ logDebug("**ERROR retrieving inspection " + iNumber + " : " + iObjResult.getErrorMessage()) ; return false ; }
	
		iObj = iObjResult.getOutput();

		inspTypeResult = aa.inspection.getInspectionType(iObj.getInspection().getInspectionGroup(), iObj.getInspectionType())

		//if (!inspTypeResult.getSuccess()){ logDebug("**ERROR retrieving inspection Type " + inspTypeResult.getErrorMessage()) ; return false ; }
	
		inspTypeArr = inspTypeResult.getOutput();

		//if (inspTypeArr == null || inspTypeArr.length == 0){ logDebug("**ERROR no inspection type found") ; return false ; }

		inspType = inspTypeArr[0]; // assume first

		inspSeq = inspType.getSequenceNumber();

		inspSchedDate = iObj.getScheduledDate().getYear() + "-" + iObj.getScheduledDate().getMonth() + "-" + iObj.getScheduledDate().getDayOfMonth()

		//logDebug(inspSchedDate)

		iout =  aa.inspection.autoAssignInspector(capIds[capId].getCapID().getID1(),capIds[capId].getCapID().getID2(),capIds[capId].getCapID().getID3(), inspSeq, inspSchedDate)

		//if (!iout.getSuccess()){ logDebug("**ERROR retrieving auto assign inspector " + iout.getErrorMessage()) ; return false ; }

		inspectorArr = iout.getOutput();

		//if (inspectorArr == null || inspectorArr.length == 0){ logDebug("**WARNING no auto-assign inspector found") ; return false ; }
	
		inspectorObj = inspectorArr[0];  // assume first
	
		iObj.setInspector(inspectorObj);

		assignResult = aa.inspection.editInspection(iObj)
	  }
	  if(!assignDone && insps[insp].getInspectionType().indexOf("Follow Up") < 0) {
		inspUserID = inspectorObj.getUserID(); 
		//assignCap(inspUserID); 
		{
			var itemCap = capIds[capId].getCapID();
			//if (arguments.length > 1) itemCap = arguments[1]; // use cap ID specified in args

			var cdScriptObjResult = aa.cap.getCapDetail(itemCap);
			//if (!cdScriptObjResult.getSuccess()){ logDebug("**ERROR: No cap detail script object : " + cdScriptObjResult.getErrorMessage()) ; return false; }

			var cdScriptObj = cdScriptObjResult.getOutput();

			//if (!cdScriptObj){ logDebug("**ERROR: No cap detail script object") ; return false; }

			cd = cdScriptObj.getCapDetailModel();

			iNameResult  = aa.person.getUser(inspUserID);

			//if (!iNameResult.getSuccess()){ logDebug("**ERROR retrieving  user model " + inspUserID + " : " + iNameResult.getErrorMessage()) ; return false ; }

			iName = iNameResult.getOutput();

			cd.setAsgnDept(iName.getDeptOfUser());
			cd.setAsgnStaff(inspUserID);

			cdWrite = aa.cap.editCapDetail(cd)

			/*if (cdWrite.getSuccess()){ logDebug("Assigned CAP to " + inspUserID) }
			else{ logDebug("**ERROR writing capdetail : " + cdWrite.getErrorMessage()) ; return false ; }*/
		}
	   assignDone = true;
	  }
	  inspprocessed++;
	 }
	}
    numprocessed = numprocessed + 1;
   }
  }

  message = numprocessed + " records processed out of " + numrecords + ". " + inspprocessed;
 }
 else{
  message = "Get failed " + getResult.getErrorMessage();
 }
}
catch(err){
 message = "Error " + err;
}

aa.env.setValue("ScriptReturnCode", result);
aa.env.setValue("ScriptReturnMessage", message);

